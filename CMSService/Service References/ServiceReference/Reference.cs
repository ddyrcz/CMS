//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMSService.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMessageMessenger")]
    public interface IMessageMessenger {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageMessenger/ShowMessageOnServerSide", ReplyAction="http://tempuri.org/IMessageMessenger/ShowMessageOnServerSideResponse")]
        void ShowMessageOnServerSide(string message, string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageMessenger/ShowMessageOnServerSide", ReplyAction="http://tempuri.org/IMessageMessenger/ShowMessageOnServerSideResponse")]
        System.Threading.Tasks.Task ShowMessageOnServerSideAsync(string message, string caption);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageMessengerChannel : CMSService.ServiceReference.IMessageMessenger, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageMessengerClient : System.ServiceModel.ClientBase<CMSService.ServiceReference.IMessageMessenger>, CMSService.ServiceReference.IMessageMessenger {
        
        public MessageMessengerClient() {
        }
        
        public MessageMessengerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageMessengerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageMessengerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageMessengerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ShowMessageOnServerSide(string message, string caption) {
            base.Channel.ShowMessageOnServerSide(message, caption);
        }
        
        public System.Threading.Tasks.Task ShowMessageOnServerSideAsync(string message, string caption) {
            return base.Channel.ShowMessageOnServerSideAsync(message, caption);
        }
    }
}
